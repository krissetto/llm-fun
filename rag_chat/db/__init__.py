'''super fugly db initialization stuff because i'm lazy'''

import asyncio
import asyncpg
import os

from pgvector.asyncpg import register_vector

DB_USER = os.environ.get("DB_USER", default="postgres")
DB_PASSWORD = os.environ.get("DB_PASSWORD", default="postgres")
DB_NAME = os.environ.get("DB_NAME", default="rag")
DB_HOST = os.environ.get("DB_HOST", default="localhost")
DB_PORT = os.environ.get("DB_PORT", default=6024)

print(f"Connecting to db {DB_NAME} on {DB_HOST}:{DB_PORT} as {DB_USER}")


db_conn: asyncpg.connection.Connection = None


async def _init():
    global db_conn
    if db_conn is not None:
        raise RuntimeError("DB has already been created, something weird is happening")

    db_conn = await asyncpg.connect(user=DB_USER, password=DB_PASSWORD, database=DB_NAME, host=DB_HOST, port=DB_PORT)
    await db_conn.execute('CREATE EXTENSION IF NOT EXISTS vector')
    await register_vector(db_conn)
    
    await db_conn.execute("""
create table if not exists sitemap (
    id int generated by default as identity primary key,
    url text not null,
    lastmod timestamp
);

create table if not exists url_mapping (
    id int generated by default as identity primary key,
    url text not null unique
);

create table if not exists chunk_text_mapping (
    id int generated by default as identity primary key,
    chunk_text text not null,
    chunk_text_hash text generated always as (md5(chunk_text)) stored,
    unique (chunk_text_hash)
);

-- Create the embeddings table to reference the mapping tables
create table if not exists embeddings (
    id int generated by default as identity primary key,
    url_id int not null references url_mapping(id),
    chunk_text_id int not null references chunk_text_mapping(id),
    chunk_embedding vector(768),
    unique (url_id, chunk_text_id)
);
""")
                        

asyncio.get_event_loop().run_until_complete(_init())

# This is here at the bottom to import the funcs from db.py to make them
# easier to use by only writing `import db` in the file that needs them.
# Those funcs use the db_conn pkg global, so putting this line at the top causes a circular import error
from .db import *
